@import "./custom_bulma.scss";

/*
Main scss file.
This creates the main.css file and the same variables can use bulma variables.
*/

html,
body {
  overscroll-behavior-x: none;
  overscroll-behavior-y: none;
  background-color: var(--backgroundColor);
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
}

body {
  font-family: $reading-fonts;
  color: var(--textColor);
}

#body {
  // full height, minus approx footer + header height
  min-height: calc(100vh - 10rem - 5rem);
}

h1 {
  font-family: $hero-fonts;
  font-size: 5rem;
  text-decoration: none;
}

a {
  color: var(--accent1Color);

  &:hover {
    color: var(--accent2Color);
  }
}

[class^="icon-"],
[class*=" icon-"] {
  color: var(--titleTextColor);
  font-size: 1.25rem;
}

.icon-large {
  font-size: 2rem;
}

/* NAV */

.navbar {
  background-color: var(--backgroundColor);
  align-items: flex-end;
  font-family: $display-fonts;
  margin: 0rem auto;
  height: 4rem;
  max-width: 73.5rem;
  align-items: center;
}

.navbar-brand {
  align-items: center;

  @include touch {
    padding: 0.5rem;
  }
}

.navbar-menu {
  box-shadow: none;
  background-color: var(--backgroundColor);
}

a.navbar-item {
  color: var(--subtitleTextColor);

  &.is-tab {
    font-size: 1.125rem;
  }

  &:hover {
    background-color: var(--backgroundAccentColor);
  }
}

.navbar-end a:hover,
.fa:hover {
  background-color: var(--backgroundAccentColor);
  color: var(--subtitleTextColor);
}

.navbar-burger {
  color: var(--textColor);
}

#dark-mode-button {
  margin: 1rem auto;

  button {
    margin-left: auto;
    margin-right: auto;
  }
}

.dark-mode-selector {
  display: flex;
  flex-direction: column;
  padding: 0.5rem;
  // padding: 0rem 0rem;
  border: 1px solid var(--backgroundColor);
  // border-radius: 0rem;
  // border: none;
  background: var(--secondaryBackgroundColor);
  height: auto;
  color: var(--backgroundColor);

  &:hover {
    color: var(--backgroundAccentColor);
  }

  &:focus {
    color: var(--backgroundAccentColor);
    &:not(:active) {
      box-shadow: none;
    }
  }
}

#logo-text {
  font-size: 32px;
  justify-content: flex-start;
  font-family: $display-fonts;
}

#logo-img,
.logo-img {
  padding: 0px;
  display: flex;
  justify-content: flex-end;
  max-width: 40px;
  height: auto;
  transition: 0.2s ease-in-out;
}

.logo-img:hover {
  transform: rotate(180deg);
}

.meta {
  text-align: center;
  margin-top: 1em;
}

.columns {
  margin-left: 0rem;
  margin-right: 0rem;
}

/* CONTENT - THIS IS WHERE MARKDOWN IS RENDERED */
.content {
  h1:first-child,
  h2:first-child,
  h3:first-child,
  h4:first-child,
  h5:first-child,
  h6:first-child {
    margin-top: 0rem !important;
  }

  h1 {
    font-family: $hero-fonts;
    font-size: 3rem;
    font-weight: 700;
    color: var(--titleTextColor);
    text-decoration: none;
  }

  h2 {
    font-family: $subtitle-fonts;
    font-size: 2rem;
    font-weight: 400;
    color: var(--titleTextColor);

    &:nth-of-type(1) {
      margin-top: 1rem;
    }

    &:not(:nth-of-type(1)) {
      margin-top: 4rem;
    }
  }

  h3 {
    font-family: $subtitle-fonts;
    font-size: 1.5rem;
    font-weight: 400;
    color: var(--subtitleTextColor);
    margin-top: 2.5rem;
  }

  h4 {
    font-family: $subtitle-fonts;
    font-size: 1.375rem;
    font-weight: 400;
    color: var(--subtitleTextColor);
    margin-top: 2rem;
  }

  h5,
  h6 {
    font-family: $subtitle-fonts;
    color: var(--subtitleTextColor);
    font-size: 1.25rem;
    font-weight: 400;
    margin-top: 1.5rem;
  }

  p,
  ul,
  ol,
  li {
    color: var(--textColor);
    font-size: 1.2rem;
    text-align: left;
  }

  strong {
    color: var(--textColor);
    font-family: $subtitle-fonts;
    font-weight: 400;
  }

  table {
    thead {
      th {
        color: var(--textColor);
      }
    }

    width: auto;
    margin-left: auto;
    margin-right: auto;
  }

  hr {
    border-top: 1px dotted var(--backgroundAccentColor);
  }

  // prevent overscroll on table that is generated by markdown:
  // https://stackoverflow.com/a/62451601/3522314
  table {
    display: block;
    max-width: -moz-fit-content;
    max-width: fit-content;
    margin: 0 auto;
    overflow-x: auto;
    white-space: nowrap;
  }

  img {
    border: 1px solid var(--titleTextColor);
    display: block;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 2rem;
    margin-top: 2rem;
  }

  .no-border {
    border: none;
  }

  /* code blocks */
  .hll {
    margin-bottom: 1rem;
    font-family: $code-fonts;
    font-size: 0.875rem;
  }

  pre {
    font-family: $code-fonts;
    font-size: 0.875rem;

    code {
      background-color: inherit;
      color: inherit;
    }
  }

  code {
    color: var(--accent2Color);
    background-color: var(--backgroundAccentColor);
    font-family: $code-fonts;
    font-size: 0.875rem;
  }

  /* class used by syntax highlighter for code blocks */
  .highlight {
    margin-bottom: 0.5rem;
  }

  /* admonitions */
  .admonition {
    margin-top: 1rem;
    margin-bottom: 1rem;
    padding: 1rem;
  }

  .admonition-info,
  .admonition-note {
    background-color: var(--accent4Color);
  }

  .admonition-tip {
    background-color: var(--accent2Color);

    p {
      color: var(--backgroundColor);
    }
  }

  .admonition-warning {
    background-color: var(--accent1Color);

    p {
      color: var(--backgroundColor);
    }
  }

  & .twitter-tweet {
    margin-left: auto;
    margin-right: auto;
    border: 1px solid var(--titleTextColor);
    border-radius: 0.5rem;
  }

  /* SVG files included in-line w text. */
  figure {
    // Most SVG files should retain the same default height across posts
    // for continuity. If a given graphic should be _larger_ than this,
    // add a custom class or style to it.
    height: 12rem;
    margin-left: 0rem;
    margin-right: 0rem;
  }
}

/* SVG */
.color-responsive-svg {
  // Paths match the text color, text in font must be exported as curves
  path {
    // must use important here because it gets overridden by the inline
    // stroke color, which is more specific.
    stroke: var(--textColor) !important;
  }

  text {
    fill: var(--textColor) !important;
  }

  // NOTE: These selectors are intended to find svg elements where there
  // IS an existing fill or stroke, and then have them use the current
  // variables instead of their hardcoded color. This defaults to the starting
  // svg color, so that it can be selected regardless of which theme the
  // site currently is using.
  //
  // This is due to a shortcoming in Affinity Designer where it exports all
  // of the styling information in a single style tag, where it's difficult to
  // properly select individual components which _should_ or _should not_ be
  // colored appropriately. This first "fill" selector checks start of string
  // the affinity designer property export format always puts fill first.
  $tags: (rect, path, ellipse, circle);
  $colors: (
    $svgDefaultColor: var(--textColor),
    $svgAlternateColor: var(--backgroundColor),
  );
  $accentColors: (
    $accent1DefaultColor: var(--accent1Color),
    $accent2DefaultColor: var(--accent2Color),
    $accent3DefaultColor: var(--accent3Color),
    $accent4DefaultColor: var(--accent4Color),
  );
  @each $tag in $tags {
    @each $color, $colorVar in $colors {
      // match anything filled w text color
      #{$tag}[fill="#{$color}"],
      #{$tag}[style^="fill:#{$color}"] {
        fill: $colorVar !important;
      }

      // match any svg with stroke of textColor
      #{$tag}[stroke="#{$color}"],
      #{$tag}[style*="stroke:#{$color}"] {
        stroke: $colorVar !important;
      }
    }

    // queries for individual accent colors.
    @each $accent, $accentVar in $accentColors {
      #{$tag}[style^="fill:#{$accent}"] {
        fill: $accentVar !important;
      }
    }
  }
}

svg {
  box-sizing: border-box;
  height: 100%;
  width: 100%;
}

/** PAGE SPACING */
.blog-post,
.blog-preview {
  margin-bottom: 8rem;
}

.pagination {
  justify-content: center;
  margin-top: 1rem;
  margin-bottom: 2rem;
  align-content: center;

  // to keep the center item aligned regardless
  // of whether the sides are links or not
  .pagination-left,
  .pagination-right {
    flex-grow: 1;
    flex-basis: 0;
  }

  .pagination-text {
    color: var(--textColor);
    font-family: $hero-fonts;
    font-size: 1.25rem;
  }

  .pagination-disabled figure {
    display: none;
  }

  figure {
    height: 2rem;
  }
}

/* HEROES AND SUBTITLES */

.hero {
  margin: 1.5rem 0rem;

  .hero-body {
    padding: 0rem;

    div {
      text-align: center;
    }

    .container {
      @include touch {
        h1 {
          font-size: 3.5rem;
        }

        h2 {
          font-size: 1.5rem;
        }
      }
    }
  }
}

/** hero displays for the svg main banner */
.hero-badge {
  margin-top: 1rem;
  height: 40rem;
}

.hero-badge-mobile {
  margin-top: 0rem;
  max-width: 30rem;
  margin-left: auto;
  margin-right: auto;
}

.hero-diamonds {
  height: 20px;
  margin-top: 1rem;
  margin-bottom: 1rem;
  margin-left: auto;
  margin-right: auto;
}

.title {
  font-family: $hero-fonts;
  font-weight: normal;
  font-size: 4.5rem;
  color: var(--titleTextColor);

  &:not(.is-spaced) + .subtitle {
    // override default bulma spacing
    margin-top: 0rem;
  }
}

.subtitle {
  font-family: $hero-subtitle-fonts;
  font-weight: normal;
  font-size: 1.5rem;
  color: var(--titleTextColor);
}

#blog-preview-container {
  max-width: 45rem;
}

.blog-preview-title {
  font-family: $hero-fonts;
  font-weight: normal;
  font-size: 3rem;
  color: var(--titleTextColor);
  word-break: break-word;
}

.blog-preview-description {
  font-size: 1.25rem;
}

.blog-preview-link-holder {
  margin-top: 1rem;
  display: flex;
  flex-flow: row nowrap;
  justify-content: flex-end;

  a {
    color: var(--textColor);
    margin: auto 0.25rem;
    font-family: $hero-fonts;
    font-size: 1.25rem;
  }

  .blog-preview-link {
    height: 2rem;
    max-width: 7rem;
    margin: 1rem 0rem;
  }
}

/* RECIPES PAGE */
.recipes-container {
  margin: 0rem auto;
}

/* ABOUT PAGE */

#about-card {
  margin-bottom: 2rem;
  background: var(--backgroundColor);
  color: var(--titleTextColor);

  /** Main section w/ name and info. */
  #main {
    display: flex;
    align-items: center;
    align-content: flex-start;
    justify-content: flex-start;

    & > div {
      /** name and logo laid out left-aligned. */
      display: flex;
      justify-content: center;
      margin-right: 0.75rem;

      /** Name / twitter handle vertically stacked. */
      &:last-child {
        margin-right: 0rem;
        flex-flow: column nowrap;
      }
    }

    .about-logo {
      width: 5rem;
      height: 5rem;
      margin-top: 0.5rem;
    }

    #about-cardtitle {
      font-family: $subtitle-fonts;
      font-size: 1.5rem;
      margin-top: 0rem;
      margin-bottom: 0rem;
    }
  }

  /** Horizontal level for the items in the about card. */
  #icons {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;

    a {
      display: flex;
      justify-content: center;
      flex-grow: 1;
    }
  }
}

#about-photo {
  margin: 0rem;
}

.about-content {
  & p {
    font-size: 1rem;
  }
}

/* FOOD MENU */

.menu-content {
  .menu-drinks-logo {
    max-width: 15rem;
    // force important because the actual svg file doesn't get
    // exported with more specific classname/id.
    margin: 0rem auto !important;
  }

  .menu-text-header {
    display: inline-block;
  }

  // custom formatting for H2 headers in the menu
  details > summary,
  summary::-webkit-details-marker {
    list-style: none;
  }

  summary {
    font-size: 2rem;
    font-family: $hero-fonts;
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  summary::after {
    font-family: "icomoon";
    content: " \f13a";
  }
  details[open] summary:after {
    font-family: "icomoon";
    content: " \f139";
  }
}

#home-main-section {
  padding-top: 12rem;
}

.home-columns {
  margin-top: 1rem;

  h2 {
    font-family: $subtitle-fonts;
    font-size: 2rem;
  }

  i {
    font-size: 2.5rem;
  }

  p {
    margin-bottom: 2rem;
    margin-top: 2rem;
    margin-left: 1rem;
    margin-right: 1rem;
    padding: 1rem;
    font-size: 1.125rem;
  }

  .column-logo {
    height: 100px;
    width: 100px;
    margin: auto;
  }

  & .home-title {
    margin-bottom: 1rem;
  }

  .home-link {
    cursor: pointer;
    text-decoration: none;
    display: block;
  }
}

/* FOOTER */

.footer {
  background-color: var(--secondaryBackgroundColor);
  color: var(--backgroundColor);
  border-top: 1rem solid var(--backgroundAccentColor);
  padding-top: 2rem;

  container {
    text-align: center;
  }

  strong {
    color: var(--backgroundColor);
  }

  & .footer-dots {
    max-width: 25rem;
    margin: 1rem auto;
  }

  & #footer-icons {
    max-width: 15rem;
    margin: 0.5rem auto;
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    [class^="icon-"] {
      // inverted icon colors for the footer.
      color: var(--backgroundColor);
    }
  }

  p {
    text-align: center;
  }
}

/* MODAL */

.modal {
  .modal-content {
    background-color: var(--backgroundColor);
    border-radius: 0.5rem;
    padding: 1rem;
    margin: 0rem 0.5rem;
    width: fit-content;
    min-height: 15rem;

    .modal-horizontal-separator {
      width: 8rem;
      padding: 1rem 0rem;
      margin-left: auto;
      margin-right: auto;
    }

    .modal-icon {
      width: 5rem;
      height: 5rem;
      padding: 0.5rem;
    }

    ul {
      display: flex;
      flex-direction: column;
      justify-content: space-around;

      li {
        a {
          display: flex;
          flex-flow: row nowrap;

          span {
            padding: 0.5rem;
            font-family: $subtitle-fonts;
            font-size: 1.5rem;
            font-weight: 400;
            color: var(--subtitleTextColor);
            display: flex;
            flex-flow: column nowrap;
            justify-content: center;
          }
        }
      }
    }
  }
}
