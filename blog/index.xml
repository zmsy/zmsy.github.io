<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on zmsy.co</title><link>https://zmsy.co/blog/</link><description>Recent content in Blog on zmsy.co</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://zmsy.co/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimizing Web Font Usage For Faster Page Loads</title><link>https://zmsy.co/blog/optimizing-web-font-usage/</link><pubDate>Sat, 09 Apr 2022 14:31:22 -0700</pubDate><guid>https://zmsy.co/blog/optimizing-web-font-usage/</guid><description>So s l o o w w w w There&amp;rsquo;s no excuse for this site to be anything other than blazing fast: Relatively (by web standards) low amount of content, few images, and virtually no interactivity. After doing some research, by far the slowest part of loading this website for most users was loading font files. There were two main ones that I cared about:
Google Fonts - Two typefaces loaded from here: One for titles/navigation and one for the body.</description></item><item><title>Dev in the Time of COVID-19</title><link>https://zmsy.co/blog/dev-in-the-time-of-covid-19/</link><pubDate>Thu, 20 Jan 2022 08:58:28 -0800</pubDate><guid>https://zmsy.co/blog/dev-in-the-time-of-covid-19/</guid><description>Been a while! This is the first post I&amp;rsquo;ve written here since Feb 2020. That was a long two-year gap. There&amp;rsquo;s likely no explanation needed for most. I didn&amp;rsquo;t keep my promise to publish more often.
I&amp;rsquo;m usually a voracious learner outside of work. It&amp;rsquo;s partially due to the fact that I&amp;rsquo;m a career-switching developer, and for ~3-5 years most of the gains I had in this new track came from extracurriculars.</description></item><item><title>Switching to Hugo</title><link>https://zmsy.co/blog/hugo/</link><pubDate>Mon, 24 Feb 2020 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/hugo/</guid><description>One of the biggest changes for this blog happened just now - this blog switched from Lektor to Hugo. For me, it&amp;rsquo;s been a revolution in how personally productive I can be. I&amp;rsquo;m expecting that this will improve how quickly I can write and publish blog articles here and, maybe, even lead to me publishing more than 1x per ~3-6month period. I don&amp;rsquo;t intend this to be a dead blog, and I&amp;rsquo;m putting in the work to make that the case.</description></item><item><title>Example-first Documentation</title><link>https://zmsy.co/blog/example-first-documentation/</link><pubDate>Sun, 07 Jul 2019 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/example-first-documentation/</guid><description>When I read through your (library|module|framework)&amp;rsquo;s documentation I will skip everything and scan until I find the first example.
The one unifying thing about many programmers is that they&amp;rsquo;re driven towards problem-solving, and they&amp;rsquo;re going to have a goal set when the finally reach your documentation. Documentation that aims to identify those goals and solve them as directly as possible is the best documentation. Users want the fastest way to prove and/or disprove their hypothesis.</description></item><item><title>An Architecture For Personal Data Engineering</title><link>https://zmsy.co/blog/personal-data-engineering/</link><pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/personal-data-engineering/</guid><description>Performing in-depth data analyses on things in my own life have always been more difficult than in my working life, primarily because there I&amp;rsquo;ve normally had teams of engineers who have helped in setting up and maintaining most of the analytics-focused infrastructure that I&amp;rsquo;ve used. Supporting myself with the same sort of infrastructure I was used to was an adventure, one that started much earlier and has since grown from there.</description></item><item><title>Building Dynamic Dungeons using Unity Tilemaps</title><link>https://zmsy.co/blog/building-dynamic-dungeons-using-unity-tilemaps/</link><pubDate>Mon, 11 Feb 2019 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/building-dynamic-dungeons-using-unity-tilemaps/</guid><description>In one of the last projects I&amp;rsquo;m doing for school, I&amp;rsquo;m working on a game wherein everything in the game is procedurally generated using a dungeon-building algorithm.
Fresh Content Each Time One of the main draws of building a Roguelike game is figuring out how to procedurally generate dungeons. While it&amp;rsquo;s difficult to replicate the high-quality hand-crafted content of titles like Legend of Zelda: A Link to the Past, you can approximate a lot of the same experience while coming up with a new layout each time the game is loaded.</description></item><item><title>Switching Careers to Software Engineering: Six Months Update</title><link>https://zmsy.co/blog/switching-careers-to-software-engineering-part-two/</link><pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/switching-careers-to-software-engineering-part-two/</guid><description>Lessons Learned Now that I&amp;rsquo;ve been in my role for a while, it&amp;rsquo;s time to reflect on that period and try to put it in context of being in a fully different role roughly 1 year ago.
The skinny:
I don&amp;rsquo;t regret it at all. There&amp;rsquo;s a lot I don&amp;rsquo;t know. &amp;hellip;and that&amp;rsquo;s basically it. I&amp;rsquo;m learning a lot every day. If you were expecting some sort of sea change in who you are after you get the job, it&amp;rsquo;s likely not going to be there.</description></item><item><title>Switching Careers to Software Engineering: A Retrospective</title><link>https://zmsy.co/blog/career-switch/</link><pubDate>Wed, 01 Aug 2018 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/career-switch/</guid><description>I&amp;rsquo;ve just been hired into my first dedicated software engineering role. After returning to school for CS in November 2016, I&amp;rsquo;ve just emerged on the other side almost two years later. This is the first thing I&amp;rsquo;ve done in my career that feels like it fits how I think and work, and I&amp;rsquo;m planning on making the most of it.
My approach:
Move into a semi-technical role where I had better access to engineering (TPM / BI Analyst).</description></item><item><title>My Very Own Airflow Cluster</title><link>https://zmsy.co/blog/my-very-own-airflow-cluster/</link><pubDate>Mon, 25 Jun 2018 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/my-very-own-airflow-cluster/</guid><description>As someone who writes a lot of one-off batch scripts, the rise of DAG (Directed Acyclic Graph) task engines has made my life a lot better. I&amp;rsquo;ve used Luigi at work for about 2 years now. For feeding the backend of this website with data, I decided to set up an Airflow cluster.
As opposed to this paradigm:
Write a script. Set it up in cron. Check the logs whenever something goes wrong.</description></item><item><title>The Switch to Webpack 4</title><link>https://zmsy.co/blog/from-gulp-to-webpack-4/</link><pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/from-gulp-to-webpack-4/</guid><description>I&amp;rsquo;ve always been interested in using Webpack to generate this site, but the heavily config-oriented earlier versions of Webpack (2.x, 3.x) were a hassle. The explicit pipelines from Gulp were always significantly easier. Yet, after using Nuxt.js for a recent project–which works exceedingly well with Webpack–I decided that it was time to jump on the bandwagon.
Reasons for Switching Gulp is very good at creating flexible tasks to be run on a regular basis.</description></item><item><title>Discovering PICO-8</title><link>https://zmsy.co/blog/discovering-pico-8/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/discovering-pico-8/</guid><description>body:
The PICO-8 is a &amp;lsquo;fantasy console&amp;rsquo;, which is basically a virtual machine for programming videogames with a set amount of memory, disk space, screen size, etc. I discovered it after I recently played the excellent Celeste for Nintendo Switch and learning that it started life as a PICO-8 game. This thing looks damn fun to program for, and it comes batteries-included for most tasks so you can get up and running in no time.</description></item><item><title>Hosting a Static Site on S3 &amp; Cloudfront</title><link>https://zmsy.co/blog/hosting-static-site-s3-cloudfront/</link><pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/hosting-static-site-s3-cloudfront/</guid><description>Considering this site is built with a static site generator, I needed to find somewhere to host it. Amazon&amp;rsquo;s S3 service, as it turns out, actually has an option to host a website out of it, which is ridiculously convenient for those who are comfortable using AWS services. Prior to this, I had purchased my domain through Namecheap.
Requirements S3 + Cloudfront met all of my pretty simple set of requirements that I wanted to enforce:</description></item><item><title>Automated Fantasy Baseball Research Using Python, Pandas, and Seaborn</title><link>https://zmsy.co/blog/fantasy-baseball/</link><pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/fantasy-baseball/</guid><description>Winning Fantasy Baseball in Style The advantages of doing my pre-season due diligence by scouting out the best fantasy baseball players often evaporates about 3 rounds into the draft. Since I can&amp;rsquo;t win in the draft, why not automate my in-season scouting efforts?
Getting Data For a good system, there are three inputs:
Roster data to know who is available. Projections to see who is slated to do well. Mid-season player statistics to so who&amp;rsquo;s currently doing well.</description></item><item><title>The Uncomfortable Practice of Talking With Business Folk About Automation</title><link>https://zmsy.co/blog/automating/</link><pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/automating/</guid><description>So&amp;hellip;Why Should We Automate This? One of the major stopping points in conversations with business users I&amp;rsquo;ve noticed is talking about automation. For a lot of people I work with, automation is a confusing black box. The type of automation I&amp;rsquo;m referencing is specific to scenarios wherein there exists no readily available commodity software that can solve the problem (e.g. no &amp;ldquo;Version control? Git! Spreadsheet? Excel!&amp;quot;).
Typical motivation:
Current system is resulting in too many issues/errors.</description></item><item><title>The Long and Winding Road To This Blog</title><link>https://zmsy.co/blog/blog-versions/</link><pubDate>Wed, 28 Feb 2018 00:00:00 +0000</pubDate><guid>https://zmsy.co/blog/blog-versions/</guid><description>Stagnation is Rough I originally purchased the domain zmsy.co in early 2014 when I was first taking coding somewhat seriously and decided that having a personal webpage for my technical conquests was appropriate. However, seeing as it&amp;rsquo;s 2018 and I&amp;rsquo;ve only just now published it, I kicked the can a bit further than I was expecting to.
Hopefully others can glean some useful information from my mistakes that I made in the progress of doing it.</description></item></channel></rss>